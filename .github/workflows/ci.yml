name: CI

on:
  # Trigger CI on PRs to master from feature branches
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run CI on'
        required: false
        default: 'feat'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: 'uv.lock'

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run demo script
        env:
          # Set demo environment variables to prevent errors
          DEMO_API_KEY: 'demo-key-for-testing'
          AZURE_OPENAI_KEY: 'demo-azure-key'
          AZURE_OPENAI_ENDPOINT: 'https://demo.openai.azure.com'
          AZURE_AI_FOUNDRY_PROJECT_ENDPOINT: 'https://demo.ai.azure.com'
          BING_SEARCH_CONNECTION_ID: 'demo-bing-connection'
          OPOINT_API_CONNECTION_ID: 'demo-opoint-connection'
          OPENAPI_OPOINT_API_KEY: 'demo-openapi-key'
        run: uv run main.py

      - name: Run tests
        run: |
          if [ -d "tests" ]; then
            uv run pytest tests/ -v --cov=app --cov-report=xml --cov-report=term
          else
            echo "No tests directory found, skipping pytest"
          fi

      - name: Run linting
        run: |
          echo "Running black check..."
          uv run black --check .

          echo "Running isort check..."
          uv run isort --check-only .

          echo "Running flake8..."
          uv run flake8 app/ tests/ || echo "flake8 found issues but continuing..."

          echo "Running mypy..."
          uv run mypy app/ || echo "mypy found issues but continuing..."

      - name: Run type checking
        run: |
          echo "Running type checking..."
          uv run mypy app/ || echo "⚠️ Type checking issues found"

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
